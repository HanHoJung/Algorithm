/*
 dp[i][j] =>수의 길이가 i이고 마지막 수는 j (1<=n<=1000, 0<=j<=9)

 dp[i][j] = dp[i-1][k]+dp[i-1][k+1]+...
            일반화 시키면
			dp[i-1][k] (i>=2,k<=j)
			
 dp[1][0] = 1
 dp[1][1] = 1
 dp[1][2] = 1
 ...
 dp[1][9] =1

 dp[2][0] = dp[1][0]
 dp[2][1] = dp[1][0]+dp[1][1] = dp[2][0]+dp[1][1]
 dp[2][2] = dp[1][0]+dp[1][1] +dp[1][2] = dp[2][1]+dp[1][2]
 dp[2][3] = dp[1][0]+dp[1][1] +dp[1][2] +dp[1][3]
 dp[2][4] = dp[1][0]+dp[1][1] +dp[1][2] +dp[1][3]+dp[1][4]
 dp[2][5] = dp[1][0]+dp[1][1] +dp[1][2] +dp[1][3]+dp[1][4]+dp[1][5]
 dp[2][6] = dp[1][0]+dp[1][1] +dp[1][2] +dp[1][3]+dp[1][4]+dp[1][5] +dp[1][6]
 dp[2][7]= dp[1][0]+dp[1][1] +dp[1][2] +dp[1][3]+dp[1][4]+dp[1][5] +dp[1][6] + dp[1][7]
 dp[2][8]=dp[1][0]+dp[1][1] +dp[1][2] +dp[1][3]+dp[1][4]+dp[1][5] +dp[1][6] + dp[1][7] +dp[1][8]
 dp[2][9]=dp[1][0]+dp[1][1] +dp[1][2] +dp[1][3]+dp[1][4]+dp[1][5] +dp[1][6] + dp[1][7] +dp[1][8]+dp[1][9]

 9(1+9)/2

*/

#include <iostream>
using namespace std;
int dp[1000][10];
int main(void) {

	int n;
	cin >> n;

	for (int j = 0; j <= 9; j++) {
		dp[1][j] = 1;
	}

	for (int i = 2; i <= n; i++) {
		
		for (int j = 0; j <= 9; j++) {
			if (j == 0) {
				dp[i][j] = dp[i - 1][j];
			}
			else {
				dp[i][j] = (dp[i][j - 1] + dp[i - 1][j])%10007;
			}

		}
	}

	int sum = 0;
	for (int i = 0; i <= 9; i++) {
		sum = (sum + dp[n][i])%10007;
	}

	cout << sum << "\n";

}